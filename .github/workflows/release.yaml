name: Build & Release APK

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Extract version information
        id: version
        run: |
          VERSION_NAME=$(grep -o 'versionName = "[^"]*"' app/build.gradle.kts | cut -d'"' -f2)
          VERSION_CODE=$(grep -o 'versionCode = [0-9]*' app/build.gradle.kts | awk '{print $3}')
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "Extracted version: $VERSION_NAME (code: $VERSION_CODE)"

      - name: Build release APK
        run: |
          chmod +x ./gradlew
          ./gradlew assembleRelease

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref == 'refs/heads/master'
        with:
          files: 'app/build/outputs/apk/release/app-release.apk'
          tag_name: v${{ env.VERSION_NAME }}
          name: Release v${{ env.VERSION_NAME }}
          body: |
            Release of version ${{ env.VERSION_NAME }} (build ${{ env.VERSION_CODE }})
            
            Commit: ${{ github.sha }}